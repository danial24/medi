'use strict';

exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NetworkError = (function (_Error) {
  _inherits(NetworkError, _Error);

  function NetworkError(message) {
    _classCallCheck(this, NetworkError);

    _Error.call(this, message);

    this.name = 'NetworkError';
    this.message = message || 'Network Error';
  }

  return NetworkError;
})(Error);

NetworkError.isNetworkError = function (err) {
  return err instanceof NetworkError;
};

exports['default'] = NetworkError;
module.exports = exports['default'];